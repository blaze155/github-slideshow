20200918 python天池训练营 宝可梦分析

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


df = pd.read_csv('./pokemon.csv')

df.info()


#计算出每个特征有多少个百分比是缺失的
percent_missing = df.isnull().sum() *100 / len(df)
missing_value_df = pd.DataFrame({
                                'column_name':df.columns,
                                'percent_missing':percent_missing
                                })
                                
missing_value_df

missing_value_df.sort_values('percent_missing',ascending=False).head(10)


#查看各代口袋妖怪的数量
df['generation'].value_counts().sort_values(ascending=False).plot.bar(color=['C0','C1','C2','C3','C4','C5','C6','C7'])
#加入颜色列表可以将不同类别的数据用不同的颜色呈现，如果不加则所有数据全部默认蓝色呈现

#查看每个系口袋妖怪的数量
df['type1'].value_counts().sort_values(ascending=True).plot.barh(color=['C0','C1','C2','C3','C4','C5','C6','C7'])


types = df['type1'].unique()
all_types=[]
for pokemon in types:
    all_types.append(pokemon)
all_types


allTypes =[x for x in df['type1'].unique()]
allTypes


df_count = df['type1'].value_counts().reset_index()
df_count.columns=['pokemon_type', 'count']
df_count


#相关热力图分析
plt.subplots(figsize=(20,15))
ax = plt.axes()
ax.set_title('Correlation Heatmap')
corr = df.corr()
sns.heatmap(corr, xticklabels=corr.columns.values, yticklabels=corr.columns.values)


interested =['hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed']
sns.pairplot(df[interested])


# 通过相关性分析heatmap分析5个基础属性
plt.subplots(figsize=(10,8))
ax = plt.axes()
ax.set_title('Correlation Heatmap')
corr = df[interested].corr()
sns.heatmap(corr,
            xticklabels = corr.columns.values,
           yticklabels = corr.columns.values,
           annot=True, fmt='f', cmap="YlGnBu")
           
           
for c in interested:
    df[c] = df[c].astype(float)

df = df.assign(total_stats = df[interested].sum(axis=1))

df[df.total_stats >= 525].shape

#种族值分布
total_stats = df.total_stats
plt.hist(total_stats, bins=35)
plt.xlabel('total_stats')
plt.ylabel('Frequency')

plt.subplots(figsize=(20,12))
ax = sns.violinplot(x='type1', y='total_stats', data=df, palette='muted')


#种族值大于570的，但不是神兽的
df[(df.total_stats >= 570) & (df.is_legendary == 0)]['name'].head(10)


sns.jointplot('base_egg_steps', 'experience_growth', data=df, size=5, ratio=3,color='g')

sns.jointplot('attack', 'hp', data=df, kind='kde')


#双系宝可梦数量统计
plt.subplots(figsize=(10,10))

sns.heatmap(
    df[df['type2']!='None'].groupby(['type1','type2']).size().unstack(),
    linewidths=1,
    annot=True,
    cmap='Blues')

plt.xticks(rotation=35)
plt.show()
